name: ci-cd

pool: $(image)

stages:

- stage: ci

  jobs:
  
    - job: 'windows'
      strategy:
        matrix:
          'Windows (Debug) (x86)':
            configuration: 'Debug'
            platform: 'x86'
          'Windows (Debug) (x64)':
            configuration: 'Debug'
            platform: 'x64'
          'Windows (Release) (x86)':
            configuration: 'Release'
            platform: 'x86'
          'Windows (Release) (x64)':
            configuration: 'Release'
            platform: 'x64'

      pool: windows-latest

      steps:
        - script: .\build.cmd -t -integrationTest -c $env:CONFIGURATION -platform $env:PLATFORM -pack -ci
          name: build_and_test
          env:
            CONFIGURATION: $(configuration)
            PLATFORM: $(platform)

    - job: 'ubuntu'
      strategy:
        matrix:
          'Ubuntu (Debug) (x86)':
            configuration: 'Debug'
            platform: 'x86'
          'Ubuntu (Debug) (x64)':
            configuration: 'Debug'
            platform: 'x64'
          'Ubuntu (Release) (x86)':
            configuration: 'Release'
            platform: 'x86'
          'Ubuntu (Release) (x64)':
            configuration: 'Release'
            platform: 'x64'

      pool: 'ubuntu-latest'

      steps:
        - script: ./build.sh -t -integrationTest -c $CONFIGURATION -platform $PLATFORM -pack -ci
          name: build_and_test
          env:
            CONFIGURATION: $(configuration)
            PLATFORM: $(platform)

    - job: 'macos'
      strategy:
        matrix:
          'MacOS (Debug) (x86)':
            configuration: 'Debug'
            platform: 'x86'
          'MacOS (Debug) (x64)':
            configuration: 'Debug'
            platform: 'x64'
          'MacOS (Release) (x86)':
            configuration: 'Release'
            platform: 'x86'
          'MacOS (Release) (x64)':
            configuration: 'Release'
            platform: 'x64'

      pool: 'macos-latest'

      steps:
        - script: ./build.sh -t -integrationTest -c $CONFIGURATION -platform $PLATFORM -pack -ci
          name: build_and_test
          env:
            CONFIGURATION: $(configuration)
            PLATFORM: $(platform)
