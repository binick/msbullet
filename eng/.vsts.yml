trigger:
- main
- refs/tags/v*

stages:

- stage: pipeline
  displayName: Setup pipeline

  jobs:

  - template: templates/jobs.yml
    parameters:

      jobs:

      - job: common

        pool:
          vmImage: windows-latest

        steps:
          - pwsh: ./eng/common-variables.ps1 -RepoRoot $(Build.Repository.LocalPath) -SourceBranch $(Build.SourceBranch)
            name: variables

- stage: build
  displayName: Build

  jobs:

  - template: templates/jobs.yml
    parameters:
      artifacts:
        publish:
          artifacts: true
          logs: true
          manifests: true       
      enablePublishUsingPipelines: true
      enablePublishTestResults: true
      
      jobs:
        
      - job: 'Windows'

        pool:
          vmImage: windows-latest

        strategy:
          matrix:
            '(Debug) (x86)':
              _BuildConfig: 'Debug'
              _BuildPlatform: 'x86'
            '(Debug) (x64)':
              _BuildConfig: 'Debug'
              _BuildPlatform: 'x64'
            '(Release) (x86)':
              _BuildConfig: 'Release'
              _BuildPlatform: 'x86'
            '(Release) (x64)':
              _BuildConfig: 'Release'
              _BuildPlatform: 'x64'

        steps:

          - checkout: self
            submodules: recursive

          - script: .\build.cmd -t -integrationTest -c $(_BuildConfig) -platform $(_BuildPlatform) -pack -ci
            name: build_and_test

      - job: 'Linux'

        pool:
          vmImage: ubuntu-latest

        strategy:
          matrix:
            '(Debug) (x86)':
              _BuildConfig: 'Debug'
              _BuildPlatform: 'x86'
            '(Debug) (x64)':
              _BuildConfig: 'Debug'
              _BuildPlatform: 'x64'
            '(Release) (x86)':
              _BuildConfig: 'Release'
              _BuildPlatform: 'x86'
            '(Release) (x64)':
              _BuildConfig: 'Release'
              _BuildPlatform: 'x64'
                
        steps:

          - checkout: self
            submodules: recursive

          - script: chmod +x build.sh &&
                    cd eng/common &&
                    chmod +x build.sh &&
                    chmod +x tools.sh
            name: set_execution_permission

          - script: ./build.sh -t --integrationTest -c $CONFIGURATION --platform $PLATFORM --pack --ci
            name: build_and_test
            env:
              CONFIGURATION: $(_BuildConfig)
              PLATFORM: $(_BuildPlatform)
             
      - job: 'MacOS'

        pool:
          vmImage: macos-latest

        strategy:
          matrix:
            '(Debug) (x86)':
              _BuildConfig: 'Debug'
              _BuildPlatform: 'x86'
            '(Debug) (x64)':
              _BuildConfig: 'Debug'
              _BuildPlatform: 'x64'
            '(Release) (x86)':
              _BuildConfig: 'Release'
              _BuildPlatform: 'x86'
            '(Release) (x64)':
              _BuildConfig: 'Release'
              _BuildPlatform: 'x64'

        steps:

          - checkout: self
            submodules: recursive

          - script: chmod +x build.sh &&
                    cd eng/common &&
                    chmod +x build.sh &&
                    chmod +x tools.sh
            name: set_execution_permission

          - script: ./build.sh -t --integrationTest -c $CONFIGURATION --platform $PLATFORM --pack --ci
            name: build_and_test
            env:
              CONFIGURATION: $(_BuildConfig)
              PLATFORM: $(_BuildPlatform)

- stage: publish
  displayName: Publish

  dependsOn:
  - pipeline
  - build
    
  jobs:

  - template: templates/jobs.yml
    parameters:
      condition: eq(stageDependencies.pipeline.common.outputs['variables._PublicRelease'], 'true')
      artifacts:
        download:
          name: Artifacts_$(Agent.OS)_Release_x64

      jobs:

      - job: NuGet

        pool:
          vmImage: windows-latest

        steps:

        - task: NuGetCommand@2
          name: sdk
          inputs:
            command: push
            nuGetFeedType: external
            packagesToPush: artifacts/**/MsBullet.Sdk.*.nupkg
            publishFeedCredentials: nuget-connection
