trigger: none

variables:
- group: publish-secrets

stages:

- stage: build
  displayName: Build

  jobs:

  - template: ../../eng/common/.azure/pipelines/templates/jobs.yml
    parameters:
      artifacts:
        publish:
          artifacts: true
          logs: true
          manifests: true       
      enablePublishUsingPipelines: true
      enablePublishTestResults: true
      enablePublishCodeCoverageResults: true
      
      jobs:
        
      - job: 'Windows'

        pool:
          vmImage: windows-latest

        strategy:
          matrix:
            '(Debug) (x86)':
              _BuildConfig: 'Debug'
              _BuildPlatform: 'x86'
            '(Debug) (x64)':
              _BuildConfig: 'Debug'
              _BuildPlatform: 'x64'
            '(Release) (x86)':
              _BuildConfig: 'Release'
              _BuildPlatform: 'x86'
            '(Release) (x64)':
              _BuildConfig: 'Release'
              _BuildPlatform: 'x64'

        steps:

          - checkout: self
            submodules: recursive

          - script: pwsh -NoProfile -ExecutionPolicy unrestricted -Command "[Net.ServicePointManager]::SecurityProtocol = [Net.SecurityProtocolType]::Tls12; &([scriptblock]::Create((Invoke-WebRequest -UseBasicParsing 'https://dot.net/v1/dotnet-install.ps1'))) -Channel STS -InstallDir ""${env:ProgramFiles}\dotnet"""
            name: install_dotnet7
              
          # Install workloads before the build started, related to https://github.com/xamarin/xamarin-macios/issues/16400
          - script: dotnet workload install ios &&
                    dotnet workload install maccatalyst &&
                    dotnet workload install macos &&
                    dotnet workload install tvos
            name: set_required_workloads

          - script: .\build.cmd -t -integrationTest -c $(_BuildConfig) -platform $(_BuildPlatform) -pack -ci
            name: build_and_test

      - job: 'Linux'

        pool:
          vmImage: ubuntu-latest

        strategy:
          matrix:
            '(Debug) (x86)':
              _BuildConfig: 'Debug'
              _BuildPlatform: 'x86'
            '(Debug) (x64)':
              _BuildConfig: 'Debug'
              _BuildPlatform: 'x64'
            '(Release) (x86)':
              _BuildConfig: 'Release'
              _BuildPlatform: 'x86'
            '(Release) (x64)':
              _BuildConfig: 'Release'
              _BuildPlatform: 'x64'
                
        steps:

          - checkout: self
            submodules: recursive

          - script: chmod +x build.sh &&
                    cd eng/common &&
                    chmod +x build.sh &&
                    chmod +x tools.sh
            name: set_execution_permission

          - script: curl -sSL https://dot.net/v1/dotnet-install.sh | bash /dev/stdin --channel STS
            name: install_dotnet7
              
          # Install workloads before the build started, related to https://github.com/xamarin/xamarin-macios/issues/16400
          # On linux is available only macos
          - script: dotnet workload install macos
            name: set_required_workloads

          - script: ./build.sh -t --integrationTest -c $CONFIGURATION --platform $PLATFORM --pack --ci
            name: build_and_test
            env:
              CONFIGURATION: $(_BuildConfig)
              PLATFORM: $(_BuildPlatform)
             
      - job: 'MacOS'

        pool:
          vmImage: macos-latest

        strategy:
          matrix:
            '(Debug) (x86)':
              _BuildConfig: 'Debug'
              _BuildPlatform: 'x86'
            '(Debug) (x64)':
              _BuildConfig: 'Debug'
              _BuildPlatform: 'x64'
            '(Release) (x86)':
              _BuildConfig: 'Release'
              _BuildPlatform: 'x86'
            '(Release) (x64)':
              _BuildConfig: 'Release'
              _BuildPlatform: 'x64'

        steps:

          - checkout: self
            submodules: recursive

          - script: chmod +x build.sh &&
                    cd eng/common &&
                    chmod +x build.sh &&
                    chmod +x tools.sh
            name: set_execution_permission

          - script: curl -sSL https://dot.net/v1/dotnet-install.sh | bash /dev/stdin --channel STS
            name: install_dotnet7
              
          # Install workloads before the build started, related to https://github.com/xamarin/xamarin-macios/issues/16400
          - script: dotnet workload install ios &&
                    dotnet workload install maccatalyst &&
                    dotnet workload install macos &&
                    dotnet workload install tvos
            name: set_required_workloads

          - script: ./build.sh -t --integrationTest -c $CONFIGURATION --platform $PLATFORM --pack --ci
            name: build_and_test
            env:
              CONFIGURATION: $(_BuildConfig)
              PLATFORM: $(_BuildPlatform)

- stage: publish
  condition: and(succeeded(), startsWith(variables['Build.SourceBranch'], 'refs/tags/'))
  displayName: Publish

  dependsOn:
  - build
    
  jobs:

  - template: ../../eng/common/.azure/pipelines/templates/jobs.yml
    parameters:
      artifacts:
        download:
          name: Artifacts_$(Agent.OS)_Release_x64

      jobs:

      - job: NuGet

        pool:
          vmImage: ubuntu-latest

        steps:

        - task: NuGetCommand@2
          name: sdk
          inputs:
            command: push
            nuGetFeedType: external
            packagesToPush: artifacts/**/MsBullet.Sdk.*.nupkg
            publishFeedCredentials: nuget-connection

      - job: GitHub
        
        pool:
          vmImage: ubuntu-latest

        steps:

        - script: |
            dotnet nuget push "artifacts/**/MsBullet.Sdk.*.nupkg" \
              --api-key $(GITHUB_TOKEN) \
              --source $(GITHUB_NUGET_FEED)
          name: sdk

