<?xml version="1.0" encoding="utf-8"?>
<Project>

  <ItemGroup>
    <PackageReference Include="coverlet.msbuild" Version="$(CoverletMSBuildVersion)" IsImplicitlyDefined="true" PrivateAssets="all" IncludeAssets="runtime;build;native;contentfiles;analyzers" />
  </ItemGroup>

  <PropertyGroup>
    <_CoverletMSBuildPath>$(NuGetPackageRoot)coverlet.msbuild\$(CoverletMSBuildVersion)\build\coverlet.msbuild.tasks.dll</_CoverletMSBuildPath>
    <_CollectRunTarget Condition="'$(VSTestNoBuild)' == 'true'">_InnerVSTestCollectTarget</_CollectRunTarget>
    <_CollectRunTarget Condition="'$(VSTestNoBuild)' != 'true'">_InnerDotNetBuildCollectTarget</_CollectRunTarget>
  </PropertyGroup>

  <UsingTask TaskName="Coverlet.MSbuild.Tasks.InstrumentationTask" AssemblyFile="$(_CoverletMSBuildPath)"/>
  <UsingTask TaskName="Coverlet.MSbuild.Tasks.CoverageResultTask" AssemblyFile="$(_CoverletMSBuildPath)"/>

  <Target Name="RunCollectCoverage" DependsOnTargets="$(_CollectRunTarget);_OuterGenerateReportTarget" />

  <Target Name="_InnerVSTestCollectTarget" DependsOnTargets="_RunCollectMetricsTarget" BeforeTargets="VSTest" />
  <Target Name="_InnerDotNetBuildCollectTarget" DependsOnTargets="_RunCollectMetricsTarget" AfterTargets="BuildProject" />

  <Target Name="_InnerGenerateReportTarget" DependsOnTargets="_RunCollectMetricsTarget">
    <PropertyGroup>
      <_ReportPath>$(ReportPath)</_ReportPath>
      <_ReportFormat>$(ReportFormat)</_ReportFormat>
    </PropertyGroup>

    <PropertyGroup>
      <InstrumenterStateTmpPath>$([MSBuild]::NormalizeDirectory('$(ArtifactsTmpDir)', '$(MSBuildProjectName)'))CoverletInstrumenterState.$(_ReportFormat)</InstrumenterStateTmpPath>
    </PropertyGroup>

    <Copy SourceFiles="$(InstrumenterState)" DestinationFiles="$(InstrumenterStateTmpPath)"/>

    <Coverlet.MSbuild.Tasks.CoverageResultTask
      Output="$(_ReportPath)"
      OutputFormat="$(_ReportFormat)"
      Threshold="$(Threshold)"
      ThresholdType="$(ThresholdType)"
      ThresholdStat="$(ThresholdStat)"
      InstrumenterState="$(InstrumenterStateTmpPath)" />
  
    <Delete Files="$(InstrumenterStateTmpPath)" />
  </Target>

  <Target Name="_OuterGenerateReportTarget">
    <MSBuild Projects="$(MSBuildProjectFile)"
             Targets="_InnerGenerateReportTarget"   
             Properties="ReportPath=%(OutputReport.Identity);ReportFormat=%(OutputReport.Format)"/>
    <Delete Files="$(InstrumenterState)" />
  </Target>

  <Target Name="_RunCollectMetricsTarget">
    <PropertyGroup>
      <_ExcludeAssemblies>%(CollectInstrumentation.ExcludeAssemblies)</_ExcludeAssemblies>
    </PropertyGroup>

    <Coverlet.MSbuild.Tasks.InstrumentationTask
      Path="$(TargetPath)"
      Include="$(Include)"
      IncludeDirectory="$(IncludeDirectory)"
      Exclude="%(TestToCollectCoverage.ExcludeAssemblies)"
      ExcludeByFile="$(ExcludeByFile)"
      ExcludeByAttribute="$(ExcludeByAttribute)"
      IncludeTestAssembly="$(IncludeTestAssembly)"
      SingleHit="$(SingleHit)"
      MergeWith="$(MergeWith)"
      UseSourceLink="$(UseSourceLink)" >
      <Output TaskParameter="InstrumenterState" PropertyName="InstrumenterState"/>
    </Coverlet.MSbuild.Tasks.InstrumentationTask>
  </Target>

</Project>
