<?xml version="1.0" encoding="utf-8"?>
<Project>

  <PropertyGroup Condition="'$(VersionlessImplicitFrameworkDefine)' == 'NET'">
    <EnableNETAnalyzers Condition="'$(EnableNETAnalyzers)' == ''">true</EnableNETAnalyzers>
    <EnableSingleFileAnalyzer Condition="'$(EnableSingleFileAnalyzer)' == ''">true</EnableSingleFileAnalyzer>
    <EnableTrimAnalyzer Condition="'$(EnableTrimAnalyzer)' == ''">true</EnableTrimAnalyzer>
    <EnableAotAnalyzer Condition="'$(EnableAotAnalyzer)' == ''">true</EnableAotAnalyzer>
    <EnforceCodeStyleInBuild Condition="'$(EnforceCodeStyleInBuild)' == ''">true</EnforceCodeStyleInBuild>
    <AnalysisMode Condition="'$(ImplicitFrameworkDefine)' == 'NET5_0' and '$(AnalysisMode)' == ''">AllEnabledByDefault</AnalysisMode>
    <AnalysisMode Condition="'$(AnalysisMode)' == ''">All</AnalysisMode>
  </PropertyGroup>

  <PropertyGroup Condition="'$(VersionlessImplicitFrameworkDefine)' != 'NET'">
    <!-- Suppress latest NuGet package update warning -->
    <_SkipUpgradeNetAnalyzersNuGetWarning Condition="'$(_SkipUpgradeNetAnalyzersNuGetWarning)' == ''">true</_SkipUpgradeNetAnalyzersNuGetWarning>
  </PropertyGroup>

  <PropertyGroup>
    <MicrosoftCodeAnalysisNetAnalyzersVersion Condition="'$(MicrosoftCodeAnalysisNetAnalyzersVersion)' == ''">6.*</MicrosoftCodeAnalysisNetAnalyzersVersion>
  </PropertyGroup>

  <ItemGroup>
    <PackageReference Condition="'$(VersionlessImplicitFrameworkDefine)' != 'NET'" Include="Microsoft.CodeAnalysis.NetAnalyzers" Version="$(MicrosoftCodeAnalysisNetAnalyzersVersion)" PrivateAssets="all" IsImplicitlyDefined="true" />
  </ItemGroup>

  <PropertyGroup>
    <DeployProjectOutput Condition="'$(DeployProjectOutput)' == ''">$(_DeployProjectOutput)</DeployProjectOutput>
    
    <!-- Run Deploy step by default when the solution is build directly via msbuild (from command line or VS). -->
    <DeployProjectOutput Condition="'$(DeployProjectOutput)' == ''">true</DeployProjectOutput>
  </PropertyGroup>

  <!-- Default empty deploy target. -->
  <Target Name="Deploy" AfterTargets="Build" Condition="'$(DeployProjectOutput)' == 'true'" />

  <PropertyGroup>
    <PackageOutputPath Condition="'$(IsShippable)' == 'true'">$(ArtifactsShippingPackagesDir)</PackageOutputPath>
    <PackageOutputPath Condition="'$(IsShippable)' != 'true'">$(ArtifactsNonShippingPackagesDir)</PackageOutputPath>
  </PropertyGroup>

  <!--
    Closed source license must be added to the package. 
    NuGet.org accepts only OSI or FSF approved licenses when using license type expression. 
  -->
  <PropertyGroup Condition="'$(PackageLicenseExpressionInternal)' != '' and '$(IsPackable)' == 'true' and '$(PackageLicenseFile)' == ''">
    <PackageLicenseFile>License.txt</PackageLicenseFile>
  </PropertyGroup>

  <ItemGroup Condition="'$(PackageLicenseExpressionInternal)' != '' and '$(IsPackable)' == 'true'">
    <None Include="$(MSBuildThisFileDirectory)Licenses\$(PackageLicenseExpressionInternal).txt" Pack="true" PackagePath="$(PackageLicenseFile)" Visible="false" />
  </ItemGroup>

</Project>
